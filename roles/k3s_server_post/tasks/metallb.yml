---

- name: Test metallb-system namespace
  command: >-
    k3s kubectl -n metallb-system
  changed_when: false
  with_items: "{{ groups['master'] }}"
  run_once: true
  delay: 120

- name: Wait for MetalLB resources. This task can take up to 30min when Calico CNI is on ...
  command: >-
    k3s kubectl wait {{ item.resource }}
    --namespace='metallb-system'
    {% if item.name | default(False) -%}{{ item.name }}{%- endif %}
    {% if item.selector | default(False) -%}--selector='{{ item.selector }}'{%- endif %}
    {% if item.condition | default(False) -%}{{ item.condition }}{%- endif %}
    --timeout='{{ metal_lb_available_timeout }}'
  register: lsresult
  until: "lsresult is not failed"
  retries: "{{ retry_count | default(40) }}"    
  delay: 45 
  changed_when: false
  with_items:
    - description: controller
      resource: deployment
      name: controller
      condition: --for condition=Available=True
    - description: webhook service
      resource: pod
      selector: component=controller
      condition: --for=jsonpath='{.status.phase}'=Running
    - description: pods in replica sets
      resource: pod
      selector: component=controller,app=metallb
      condition: --for condition=Ready
    - description: ready replicas of controller
      resource: replicaset
      selector: component=controller,app=metallb
      condition: --for=jsonpath='{.status.readyReplicas}'=1
    - description: fully labeled replicas of controller
      resource: replicaset
      selector: component=controller,app=metallb
      condition: --for=jsonpath='{.status.fullyLabeledReplicas}'=1
    - description: available replicas of controller
      resource: replicaset
      selector: component=controller,app=metallb
      condition: --for=jsonpath='{.status.availableReplicas}'=1
  loop_control:
    label: "{{ item.description }}"

- name: Test metallb-system webhook-service endpoint
  command: >-
    k3s kubectl -n metallb-system get endpoints webhook-service
  register: lsresult
  until: "lsresult is not failed"
  retries: "{{ retry_count | default(40) }}"    
  delay: 45 
  changed_when: false
  with_items: "{{ groups['master'] }}"
  run_once: true
  delay: 120 

- name: Create manifests directory on first master
  file:
    path: /var/lib/rancher/k3s/server/manifests
    state: directory
    owner: root
    group: root
    mode: 0644
  when: ansible_hostname == hostvars[groups['master'][0]]['ansible_hostname']

- name: Copy metallb CRs manifest to first master
  template:
    src: "metallb.crs.j2"
    dest: "/var/lib/rancher/k3s/server/manifests/metallb-crs.yaml"
    owner: root
    group: root
    mode: 0644
  when: ansible_hostname == hostvars[groups['master'][0]]['ansible_hostname']

- name: Test metallb-system resources for Layer 2 configuration
  command: >-
    k3s kubectl -n metallb-system get {{ item }}
  changed_when: false
  register: lsresult
  until: lsresult.rc == 0 and (lsresult.stdout | length) > 0  
  retries: "{{ retry_count | default(40) }}"
  delay: 10
  when: metal_lb_mode == "layer2"
  with_items:
    - IPAddressPool
    - L2Advertisement

- name: Test metallb-system resources for BGP configuration
  command: >-
    k3s kubectl -n metallb-system get {{ item }}
  changed_when: false
  register: lsresult
  until: lsresult.rc == 0 and (lsresult.stdout | length) > 0  
  retries: "{{ retry_count | default(40) }}"
  delay: 10
  when: metal_lb_mode == "bgp"
  with_items:
    - IPAddressPool
    - BGPPeer
    - BGPAdvertisement
